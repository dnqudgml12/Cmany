{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC6B0\\uBCD1\\uD76C\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\hguadminlastlast\\\\src\\\\pages\\\\dataCollection\\\\StudentCouncil.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport SearchRequire from \"../../components/DataCollection_Components/SearchRequire\";\nimport { styled } from \"styled-components\";\nimport { useNavigate } from \"react-router-dom\";\nimport StyledPaginationComponent from \"../../components/DataCollection_Components/StylePaginationComponent\";\nimport DataTable from \"../../components/DataCollection_Components/DataCollectionTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentCouncil() {\n  _s();\n  const navigate = useNavigate();\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const readDataNotice = async () => {\n    try {\n      const response = await axios.get(\"http://54.180.86.22:8080/api/shareNotices\", {\n        headers: {\n          Authorization: localStorage.getItem(\"token\")\n        }\n      });\n      setData(response.data);\n      setFilteredData(response.data);\n    } catch (error) {\n      console.log(\"Error fetching notices:\", error);\n    }\n  };\n\n  // isToday: 오늘 날짜와 주어진 날짜가 같은지 비교\n  const isToday = date => {\n    const today = new Date();\n    return date.getDate() === today.getDate() && date.getMonth() === today.getMonth() && date.getFullYear() === today.getFullYear();\n  };\n\n  // isWithinXDays: 주어진 날짜가 X일 이내에 있는지 비교\n  const isWithinXDays = (date, days) => {\n    const today = new Date();\n    const targetDate = new Date(date);\n    const diffTime = Math.abs(today - targetDate);\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    return diffDays <= days;\n  };\n\n  // isWithinXMonths: 주어진 날짜가 X개월 이내에 있는지 비교\n  const isWithinXMonths = (date, months) => {\n    const today = new Date();\n    const targetDate = new Date(date);\n    const diffMonths = (today.getFullYear() - targetDate.getFullYear()) * 12 + today.getMonth() - targetDate.getMonth();\n    return diffMonths <= months;\n  };\n\n  // isWithinXYears: 주어진 날짜가 X년 이내에 있는지 비교\n  const isWithinXYears = (date, years) => {\n    const today = new Date();\n    const targetDate = new Date(date);\n    const diffYears = today.getFullYear() - targetDate.getFullYear();\n    return diffYears <= years;\n  };\n\n  // isWithinDateRange: 주어진 날짜가 시작 날짜와 종료 날짜 사이에 있는지 비교\n  const isWithinDateRange = (date, startDate, endDate) => {\n    return date >= startDate && date <= endDate;\n  };\n  const handleSearchFilters = filters => {\n    const {\n      selectedOption,\n      dateButtonClicked,\n      startDate,\n      endDate,\n      searchInput\n    } = filters;\n    let filteredResults = data;\n    // console.log(filters);\n    const searchInputLower = searchInput.toLowerCase(); // 입력된 검색어를 소문자로 변환\n\n    if (selectedOption === \"제목만\") {\n      filteredResults = filteredResults.filter(item => item.title.toLowerCase().includes(searchInputLower));\n    } else if (selectedOption === \"제목, 내용\") {\n      filteredResults = filteredResults.filter(item => item.title.toLowerCase().includes(searchInputLower) || item.content.toLowerCase().includes(searchInputLower));\n    } else if (selectedOption === \"내용\") {\n      filteredResults = filteredResults.filter(item => item.content.toLowerCase().includes(searchInputLower));\n    } else if (selectedOption === \"작성자\") {\n      filteredResults = filteredResults.filter(item => {\n        if (searchInput.substring(\"총학생회\")) {\n          return item.category === 1;\n        } else if (searchInput.substring(\"총동아리연합회\")) {\n          return item.category === 2;\n        } else if (searchInput.substring(\"중앙선거관리위원회\")) {\n          return item.category === 3;\n        } else if (searchInput === \"\") {\n          return true;\n        } else {\n          return false;\n        }\n      });\n    }\n    if (dateButtonClicked[0]) {\n      // 오늘\n      filteredResults = filteredResults.filter(item => isToday(new Date(item.createdAt)));\n    } else if (dateButtonClicked[1]) {\n      // 1주일\n      filteredResults = filteredResults.filter(item => isWithinXDays(new Date(item.createdAt), 7));\n    } else if (dateButtonClicked[2]) {\n      // 1개월\n      filteredResults = filteredResults.filter(item => isWithinXMonths(new Date(item.createdAt), 1));\n    } else if (dateButtonClicked[3]) {\n      // 3개월\n      filteredResults = filteredResults.filter(item => isWithinXMonths(new Date(item.createdAt), 3));\n    } else if (dateButtonClicked[4]) {\n      // 6개월\n      filteredResults = filteredResults.filter(item => isWithinXMonths(new Date(item.createdAt), 6));\n    } else if (dateButtonClicked[5]) {\n      // 1년\n      filteredResults = filteredResults.filter(item => isWithinXYears(new Date(item.createdAt), 1));\n    } else if (startDate && endDate) {\n      // 시작 날짜와 종료 날짜 사이\n      filteredResults = filteredResults.filter(item => isWithinDateRange(new Date(item.createdAt), new Date(startDate), new Date(endDate)));\n    }\n    if (selectedOption === \"\" && dateButtonClicked.every(btn => !btn) && !startDate && !endDate) {\n      // 아무 조건도 선택하지 않았을 때\n      filteredResults = data;\n    }\n    setFilteredData(filteredResults);\n  };\n  const handlePageChange = page => {\n    setPage(page);\n  };\n  const handleButtonClick = () => {\n    navigate(\"/dataRegister\");\n  };\n\n  //\"[오늘 등록된 새 글 n건] 검색 결과 n건 검색 되었습니다.\"\" 를 위한 함수\n  const calculateNewPostsCount = () => {\n    const currentDate = new Date();\n    //한국 시간으로 변경\n    const koreanTime = new Date(currentDate.getTime() + 9 * 60 * 60 * 1000);\n    const currentDateString = koreanTime.toISOString().slice(0, 10);\n    // console.log(currentDateString);\n    const newPosts = data.filter(item => {\n      const postDate = new Date(item.createdAt);\n      const postDateString = postDate.toISOString().slice(0, 10);\n      // console.log(\"postDate:\", postDateString);\n      return postDateString === currentDateString;\n    });\n    return newPosts.length;\n  };\n  const newPostsCount = calculateNewPostsCount();\n  const checkboxColumn = {\n    Header: \"\",\n    accessor: \"checkbox\",\n    Cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      ...row.getToggleRowSelectedProps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)\n  };\n  const getCategoryName = categoryId => {\n    switch (categoryId) {\n      case 1:\n        return \"총학생회\";\n      case 2:\n        return \"총동아리연합회\";\n      case 3:\n        return \"중앙선거관리위원회\";\n      default:\n        return \" \";\n    }\n  };\n  const downloadFile = async (filePath, fileName) => {\n    try {\n      const response = await axios.get(filePath, {\n        responseType: \"blob\" // Set the response type to blob\n      });\n\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", fileName);\n      document.body.appendChild(link);\n      link.click();\n      link.parentNode.removeChild(link);\n      window.URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error(\"Error downloading file:\", error);\n    }\n  };\n  const columns = React.useMemo(() => [checkboxColumn, {\n    Header: \"No.\",\n    accessor: \"id\"\n  }, {\n    Header: \"제목\",\n    accessor: \"title\"\n  }, {\n    Header: \"작성자\",\n    accessor: \"category\"\n  }, {\n    Header: \"파일\",\n    accessor: \"files\",\n    Cell: ({\n      value\n    }) => /*#__PURE__*/_jsxDEV(FileLink, {\n      children: value.map((file, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => downloadFile(file.path, file.title) // Add this onClick handler\n        ,\n        children: [file.title, index < value.length - 1 ? \", \" : \"\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }, this)\n  }, {\n    Header: \"게시일\",\n    accessor: \"createdAt\"\n  }, {\n    Header: \"조회수\",\n    accessor: \"viewCnt\"\n  }, {\n    Header: \"수정\",\n    accessor: \"edit\",\n    Cell: () => /*#__PURE__*/_jsxDEV(EditBtn, {\n      children: \"\\uC218\\uC815\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 21\n    }, this)\n  }], []);\n  useEffect(() => {\n    readDataNotice();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Div, {\n    children: [/*#__PURE__*/_jsxDEV(RowDiv, {\n      children: [/*#__PURE__*/_jsxDEV(Header2, {\n        children: \"\\uC790\\uB8CC\\uC9D1 - \\uCD1D\\uD559\\uC0DD\\uD68C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RegisterBtn, {\n        onClick: handleButtonClick,\n        children: \"\\uC790\\uB8CC \\uB4F1\\uB85D\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchRequire, {\n      onSearchFilters: handleSearchFilters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlertDiv, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"[\\uC624\\uB298 \\uB4F1\\uB85D\\uB41C \\uC0C8 \\uAE00 \", /*#__PURE__*/_jsxDEV(P, {\n          children: newPostsCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 23\n        }, this), \"\\uAC74] \\uAC80\\uC0C9 \\uACB0\\uACFC\", \" \", /*#__PURE__*/_jsxDEV(P, {\n          children: data.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), \"\\uAC74 \\uAC80\\uC0C9 \\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DeleteBtn, {\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataDiv, {\n      children: filteredData.length > 0 &&\n      /*#__PURE__*/\n      // 조건부 렌더링\n      _jsxDEV(DataTable, {\n        columns: columns,\n        filteredData: filteredData.map(item => ({\n          ...item,\n          category: getCategoryName(item.category)\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledPaginationComponent, {\n      page: page,\n      handlePageChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 5\n  }, this);\n}\n_s(StudentCouncil, \"uL8AB+ggO+jjpxTtMo8U0T5nFbQ=\", false, function () {\n  return [useNavigate];\n});\n_c = StudentCouncil;\nexport default StudentCouncil;\nconst Div = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: #f6f6f6;\n  padding: 20px 40px 20px 40px;\n`;\n_c2 = Div;\nconst RowDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: 100%;\n  justify-content: space-between;\n`;\n_c3 = RowDiv;\nconst Header2 = styled.h2`\n  color: #000;\n  font-family: \"NotoSansKR\";\n  font-size: 32px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 44px;\n  letter-spacing: -1.8px;\n`;\n_c4 = Header2;\nconst DataDiv = styled.div`\n  width: 100%;\n`;\n_c5 = DataDiv;\nconst RegisterBtn = styled.button`\n  width: fit-content;\n  height: 42px;\n  padding: 10px 20px 10px 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  border-radius: 5px;\n  background: var(--admin-blue-default-blue, #0079e0);\n  color: white;\n  border: #0079e0;\n`;\n_c6 = RegisterBtn;\nconst AlertDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: baseline;\n  width: 100%;\n  margin-top: 40px;\n  font-family: \"Noto Sans KR\";\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 20px;\n  letter-spacing: -0.04em;\n  text-align: left;\n`;\n_c7 = AlertDiv;\nconst EditBtn = styled.button`\n  width: fit-content;\n  height: fit-content;\n  padding: 5px 10px 5px 10px;\n  border-radius: 5px;\n  background: var(--admin-blue-default-blue, #0079e0);\n  color: white;\n  border: #0079e0;\n  font-family: \"Noto Sans KR\";\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 21px;\n  letter-spacing: 0em;\n  text-align: center;\n`;\n_c8 = EditBtn;\nconst DeleteBtn = styled.button`\n  background-color: #ffffff;\n  width: fit-content;\n  padding: 6px 15px 6px 15px;\n  border-radius: 5px;\n  border: 1px solid var(--admin-gray-stroke, #e8e8e8);\n  &:active {\n    background-color: #0079e0;\n    transform: scale(0.95);\n    border: none;\n  }\n  font-family: \"NotoSansKR\";\n`;\n_c9 = DeleteBtn;\nconst FileLink = styled.span`\n  color: #0079e0;\n  cursor: pointer;\n  text-decoration: underline;\n\n  &:hover {\n    text-decoration: none;\n  }\n`;\n_c10 = FileLink;\nconst P = styled.span`\n  color: #0079e0;\n  font-weight: bold;\n`;\n_c11 = P;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"StudentCouncil\");\n$RefreshReg$(_c2, \"Div\");\n$RefreshReg$(_c3, \"RowDiv\");\n$RefreshReg$(_c4, \"Header2\");\n$RefreshReg$(_c5, \"DataDiv\");\n$RefreshReg$(_c6, \"RegisterBtn\");\n$RefreshReg$(_c7, \"AlertDiv\");\n$RefreshReg$(_c8, \"EditBtn\");\n$RefreshReg$(_c9, \"DeleteBtn\");\n$RefreshReg$(_c10, \"FileLink\");\n$RefreshReg$(_c11, \"P\");","map":{"version":3,"names":["axios","React","useState","useEffect","SearchRequire","styled","useNavigate","StyledPaginationComponent","DataTable","jsxDEV","_jsxDEV","StudentCouncil","_s","navigate","page","setPage","data","setData","filteredData","setFilteredData","readDataNotice","response","get","headers","Authorization","localStorage","getItem","error","console","log","isToday","date","today","Date","getDate","getMonth","getFullYear","isWithinXDays","days","targetDate","diffTime","Math","abs","diffDays","ceil","isWithinXMonths","months","diffMonths","isWithinXYears","years","diffYears","isWithinDateRange","startDate","endDate","handleSearchFilters","filters","selectedOption","dateButtonClicked","searchInput","filteredResults","searchInputLower","toLowerCase","filter","item","title","includes","content","substring","category","createdAt","every","btn","handlePageChange","handleButtonClick","calculateNewPostsCount","currentDate","koreanTime","getTime","currentDateString","toISOString","slice","newPosts","postDate","postDateString","length","newPostsCount","checkboxColumn","Header","accessor","Cell","row","type","getToggleRowSelectedProps","fileName","_jsxFileName","lineNumber","columnNumber","getCategoryName","categoryId","downloadFile","filePath","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","parentNode","removeChild","revokeObjectURL","columns","useMemo","value","FileLink","children","map","file","index","onClick","path","EditBtn","Div","RowDiv","Header2","RegisterBtn","onSearchFilters","AlertDiv","P","DeleteBtn","DataDiv","_c","div","_c2","_c3","h2","_c4","_c5","button","_c6","_c7","_c8","_c9","span","_c10","_c11","$RefreshReg$"],"sources":["C:/Users/우병희/OneDrive/바탕 화면/hguadminlastlast/src/pages/dataCollection/StudentCouncil.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport SearchRequire from \"../../components/DataCollection_Components/SearchRequire\";\r\nimport { styled } from \"styled-components\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport StyledPaginationComponent from \"../../components/DataCollection_Components/StylePaginationComponent\";\r\nimport DataTable from \"../../components/DataCollection_Components/DataCollectionTable\";\r\n\r\nfunction StudentCouncil() {\r\n  const navigate = useNavigate();\r\n  const [page, setPage] = useState(1);\r\n  const [data, setData] = useState([]);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n\r\n  const readDataNotice = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"http://54.180.86.22:8080/api/shareNotices\",\r\n        {\r\n          headers: { Authorization: localStorage.getItem(\"token\") },\r\n        }\r\n      );\r\n      setData(response.data);\r\n      setFilteredData(response.data);\r\n    } catch (error) {\r\n      console.log(\"Error fetching notices:\", error);\r\n    }\r\n  };\r\n\r\n  // isToday: 오늘 날짜와 주어진 날짜가 같은지 비교\r\n  const isToday = (date) => {\r\n    const today = new Date();\r\n    return (\r\n      date.getDate() === today.getDate() &&\r\n      date.getMonth() === today.getMonth() &&\r\n      date.getFullYear() === today.getFullYear()\r\n    );\r\n  };\r\n\r\n  // isWithinXDays: 주어진 날짜가 X일 이내에 있는지 비교\r\n  const isWithinXDays = (date, days) => {\r\n    const today = new Date();\r\n    const targetDate = new Date(date);\r\n    const diffTime = Math.abs(today - targetDate);\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n    return diffDays <= days;\r\n  };\r\n\r\n  // isWithinXMonths: 주어진 날짜가 X개월 이내에 있는지 비교\r\n  const isWithinXMonths = (date, months) => {\r\n    const today = new Date();\r\n    const targetDate = new Date(date);\r\n    const diffMonths =\r\n      (today.getFullYear() - targetDate.getFullYear()) * 12 +\r\n      today.getMonth() -\r\n      targetDate.getMonth();\r\n    return diffMonths <= months;\r\n  };\r\n\r\n  // isWithinXYears: 주어진 날짜가 X년 이내에 있는지 비교\r\n  const isWithinXYears = (date, years) => {\r\n    const today = new Date();\r\n    const targetDate = new Date(date);\r\n    const diffYears = today.getFullYear() - targetDate.getFullYear();\r\n    return diffYears <= years;\r\n  };\r\n\r\n  // isWithinDateRange: 주어진 날짜가 시작 날짜와 종료 날짜 사이에 있는지 비교\r\n  const isWithinDateRange = (date, startDate, endDate) => {\r\n    return date >= startDate && date <= endDate;\r\n  };\r\n\r\n  const handleSearchFilters = (filters) => {\r\n    const {\r\n      selectedOption,\r\n      dateButtonClicked,\r\n      startDate,\r\n      endDate,\r\n      searchInput,\r\n    } = filters;\r\n\r\n    let filteredResults = data;\r\n    // console.log(filters);\r\n    const searchInputLower = searchInput.toLowerCase(); // 입력된 검색어를 소문자로 변환\r\n\r\n    if (selectedOption === \"제목만\") {\r\n      filteredResults = filteredResults.filter((item) =>\r\n        item.title.toLowerCase().includes(searchInputLower)\r\n      );\r\n    } else if (selectedOption === \"제목, 내용\") {\r\n      filteredResults = filteredResults.filter(\r\n        (item) =>\r\n          item.title.toLowerCase().includes(searchInputLower) ||\r\n          item.content.toLowerCase().includes(searchInputLower)\r\n      );\r\n    } else if (selectedOption === \"내용\") {\r\n      filteredResults = filteredResults.filter((item) =>\r\n        item.content.toLowerCase().includes(searchInputLower)\r\n      );\r\n    } else if (selectedOption === \"작성자\") {\r\n      filteredResults = filteredResults.filter((item) => {\r\n        if (searchInput.substring(\"총학생회\")) {\r\n          return item.category === 1;\r\n        } else if (searchInput.substring(\"총동아리연합회\")) {\r\n          return item.category === 2;\r\n        } else if (searchInput.substring(\"중앙선거관리위원회\")) {\r\n          return item.category === 3;\r\n        } else if (searchInput === \"\") {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n\r\n    if (dateButtonClicked[0]) {\r\n      // 오늘\r\n      filteredResults = filteredResults.filter((item) =>\r\n        isToday(new Date(item.createdAt))\r\n      );\r\n    } else if (dateButtonClicked[1]) {\r\n      // 1주일\r\n      filteredResults = filteredResults.filter((item) =>\r\n        isWithinXDays(new Date(item.createdAt), 7)\r\n      );\r\n    } else if (dateButtonClicked[2]) {\r\n      // 1개월\r\n      filteredResults = filteredResults.filter((item) =>\r\n        isWithinXMonths(new Date(item.createdAt), 1)\r\n      );\r\n    } else if (dateButtonClicked[3]) {\r\n      // 3개월\r\n      filteredResults = filteredResults.filter((item) =>\r\n        isWithinXMonths(new Date(item.createdAt), 3)\r\n      );\r\n    } else if (dateButtonClicked[4]) {\r\n      // 6개월\r\n      filteredResults = filteredResults.filter((item) =>\r\n        isWithinXMonths(new Date(item.createdAt), 6)\r\n      );\r\n    } else if (dateButtonClicked[5]) {\r\n      // 1년\r\n      filteredResults = filteredResults.filter((item) =>\r\n        isWithinXYears(new Date(item.createdAt), 1)\r\n      );\r\n    } else if (startDate && endDate) {\r\n      // 시작 날짜와 종료 날짜 사이\r\n      filteredResults = filteredResults.filter((item) =>\r\n        isWithinDateRange(\r\n          new Date(item.createdAt),\r\n          new Date(startDate),\r\n          new Date(endDate)\r\n        )\r\n      );\r\n    }\r\n\r\n    if (\r\n      selectedOption === \"\" &&\r\n      dateButtonClicked.every((btn) => !btn) &&\r\n      !startDate &&\r\n      !endDate\r\n    ) {\r\n      // 아무 조건도 선택하지 않았을 때\r\n      filteredResults = data;\r\n    }\r\n\r\n    setFilteredData(filteredResults);\r\n  };\r\n\r\n  const handlePageChange = (page) => {\r\n    setPage(page);\r\n  };\r\n  const handleButtonClick = () => {\r\n    navigate(\"/dataRegister\");\r\n  };\r\n\r\n  //\"[오늘 등록된 새 글 n건] 검색 결과 n건 검색 되었습니다.\"\" 를 위한 함수\r\n  const calculateNewPostsCount = () => {\r\n    const currentDate = new Date();\r\n    //한국 시간으로 변경\r\n    const koreanTime = new Date(currentDate.getTime() + 9 * 60 * 60 * 1000);\r\n    const currentDateString = koreanTime.toISOString().slice(0, 10);\r\n    // console.log(currentDateString);\r\n    const newPosts = data.filter((item) => {\r\n      const postDate = new Date(item.createdAt);\r\n      const postDateString = postDate.toISOString().slice(0, 10);\r\n      // console.log(\"postDate:\", postDateString);\r\n      return postDateString === currentDateString;\r\n    });\r\n    return newPosts.length;\r\n  };\r\n\r\n  const newPostsCount = calculateNewPostsCount();\r\n\r\n  const checkboxColumn = {\r\n    Header: \"\",\r\n    accessor: \"checkbox\",\r\n    Cell: ({ row }) => (\r\n      <input type=\"checkbox\" {...row.getToggleRowSelectedProps()} />\r\n    ),\r\n  };\r\n\r\n  const getCategoryName = (categoryId) => {\r\n    switch (categoryId) {\r\n      case 1:\r\n        return \"총학생회\";\r\n      case 2:\r\n        return \"총동아리연합회\";\r\n      case 3:\r\n        return \"중앙선거관리위원회\";\r\n      default:\r\n        return \" \";\r\n    }\r\n  };\r\n\r\n  const downloadFile = async (filePath, fileName) => {\r\n    try {\r\n      const response = await axios.get(filePath, {\r\n        responseType: \"blob\", // Set the response type to blob\r\n      });\r\n\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.setAttribute(\"download\", fileName);\r\n      document.body.appendChild(link);\r\n\r\n      link.click();\r\n\r\n      link.parentNode.removeChild(link);\r\n      window.URL.revokeObjectURL(url);\r\n    } catch (error) {\r\n      console.error(\"Error downloading file:\", error);\r\n    }\r\n  };\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      checkboxColumn,\r\n      { Header: \"No.\", accessor: \"id\" },\r\n      { Header: \"제목\", accessor: \"title\" },\r\n      { Header: \"작성자\", accessor: \"category\" },\r\n      {\r\n        Header: \"파일\",\r\n        accessor: \"files\",\r\n        Cell: ({ value }) => (\r\n          <FileLink>\r\n            {value.map((file, index) => (\r\n              <span\r\n                key={index}\r\n                onClick={() => downloadFile(file.path, file.title)} // Add this onClick handler\r\n              >\r\n                {file.title}\r\n                {index < value.length - 1 ? \", \" : \"\"}\r\n              </span>\r\n            ))}\r\n          </FileLink>\r\n        ),\r\n      },\r\n      { Header: \"게시일\", accessor: \"createdAt\" },\r\n      { Header: \"조회수\", accessor: \"viewCnt\" },\r\n      {\r\n        Header: \"수정\",\r\n        accessor: \"edit\",\r\n        Cell: () => <EditBtn>수정</EditBtn>,\r\n      },\r\n    ],\r\n    []\r\n  );\r\n  useEffect(() => {\r\n    readDataNotice();\r\n  }, []);\r\n\r\n  return (\r\n    <Div>\r\n      <RowDiv>\r\n        <Header2>자료집 - 총학생회</Header2>\r\n        <RegisterBtn onClick={handleButtonClick}>자료 등록하기</RegisterBtn>\r\n      </RowDiv>\r\n      <SearchRequire onSearchFilters={handleSearchFilters} />\r\n      <AlertDiv>\r\n        <p>\r\n          [오늘 등록된 새 글 <P>{newPostsCount}</P>건] 검색 결과{\" \"}\r\n          <P>{data.length}</P>건 검색 되었습니다.\r\n        </p>\r\n        <DeleteBtn>삭제</DeleteBtn>\r\n      </AlertDiv>\r\n      <DataDiv>\r\n        {filteredData.length > 0 && ( // 조건부 렌더링\r\n          <DataTable\r\n            columns={columns}\r\n            filteredData={filteredData.map((item) => ({\r\n              ...item,\r\n              category: getCategoryName(item.category),\r\n            }))}\r\n          />\r\n        )}\r\n      </DataDiv>\r\n      <StyledPaginationComponent\r\n        page={page}\r\n        handlePageChange={handlePageChange}\r\n      />\r\n    </Div>\r\n  );\r\n}\r\n\r\nexport default StudentCouncil;\r\n\r\nconst Div = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #f6f6f6;\r\n  padding: 20px 40px 20px 40px;\r\n`;\r\n\r\nconst RowDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Header2 = styled.h2`\r\n  color: #000;\r\n  font-family: \"NotoSansKR\";\r\n  font-size: 32px;\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  line-height: 44px;\r\n  letter-spacing: -1.8px;\r\n`;\r\n\r\nconst DataDiv = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst RegisterBtn = styled.button`\r\n  width: fit-content;\r\n  height: 42px;\r\n  padding: 10px 20px 10px 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 10px;\r\n  border-radius: 5px;\r\n  background: var(--admin-blue-default-blue, #0079e0);\r\n  color: white;\r\n  border: #0079e0;\r\n`;\r\n\r\nconst AlertDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: baseline;\r\n  width: 100%;\r\n  margin-top: 40px;\r\n  font-family: \"Noto Sans KR\";\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  line-height: 20px;\r\n  letter-spacing: -0.04em;\r\n  text-align: left;\r\n`;\r\n\r\nconst EditBtn = styled.button`\r\n  width: fit-content;\r\n  height: fit-content;\r\n  padding: 5px 10px 5px 10px;\r\n  border-radius: 5px;\r\n  background: var(--admin-blue-default-blue, #0079e0);\r\n  color: white;\r\n  border: #0079e0;\r\n  font-family: \"Noto Sans KR\";\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  line-height: 21px;\r\n  letter-spacing: 0em;\r\n  text-align: center;\r\n`;\r\n\r\nconst DeleteBtn = styled.button`\r\n  background-color: #ffffff;\r\n  width: fit-content;\r\n  padding: 6px 15px 6px 15px;\r\n  border-radius: 5px;\r\n  border: 1px solid var(--admin-gray-stroke, #e8e8e8);\r\n  &:active {\r\n    background-color: #0079e0;\r\n    transform: scale(0.95);\r\n    border: none;\r\n  }\r\n  font-family: \"NotoSansKR\";\r\n`;\r\n\r\nconst FileLink = styled.span`\r\n  color: #0079e0;\r\n  cursor: pointer;\r\n  text-decoration: underline;\r\n\r\n  &:hover {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst P = styled.span`\r\n  color: #0079e0;\r\n  font-weight: bold;\r\n`;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}